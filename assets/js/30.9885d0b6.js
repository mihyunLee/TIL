(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{329:function(s,r,a){"use strict";a.r(r);var t=a(7),e=Object(t.a)({},(function(){var s=this,r=s._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h1",{attrs:{id:"체리픽-cherry-pick"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#체리픽-cherry-pick"}},[s._v("#")]),s._v(" 체리픽 (cherry-pick)")]),s._v(" "),r("Tags"),s._v(" "),r("h2",{attrs:{id:"cherry-pick은-언제-사용할까"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cherry-pick은-언제-사용할까"}},[s._v("#")]),s._v(" cherry-pick은 언제 사용할까?")]),s._v(" "),r("p",[s._v("cherry-pick은 다른 branch에 있는 commit 중에서 원하는 commit을 현재의 branch로 가져오고 싶을 때 사용한다.")]),s._v(" "),r("p",[s._v("commit이 실제로 branch 간에 이동되는 것이 아니라, commit을 복사하여 다른 branch에 붙여넣는 개념이다.")]),s._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),r("p",[s._v("cherry pick은 '케이크 위에 얹어져 있는 체리만 집어 먹는 행위'라는 뜻에서 비유한 것으로 자신이 정확하게 원하는 부분만 취하는 행위를 두루 일컫는 말이라고 한다. ("),r("a",{attrs:{href:"https://namu.wiki/w/%EC%B2%B4%EB%A6%AC%ED%94%BC%ED%82%B9",target:"_blank",rel:"noopener noreferrer"}},[s._v("namu wiki"),r("OutboundLink")],1),s._v(")")])]),s._v(" "),r("h2",{attrs:{id:"cherry-pick을-사용할-때-주의사항"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cherry-pick을-사용할-때-주의사항"}},[s._v("#")]),s._v(" cherry-pick을 사용할 때 주의사항")]),s._v(" "),r("p",[s._v("어떻게 보면 필요한 것만 가져올 수 있으니 유용하다고 생각할 수 있지만, 같은 commit이 중복되는 일이 발생할 수 있어 보통은 일반적인 merge를 사용하는 것이 권장된다.")]),s._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[s._v("_cherry-pick이 유용한 상황_")]),s._v(" "),r("ol",[r("li",[r("p",[s._v("팀으로 협업할 때")]),s._v(" "),r("p",[s._v("협업 중에 다른 동료가 만들고 있는 기능이 필요할 때 사용한다.\n해당 기능을 이미 만들어 동료의 branch에 push되어 있지만, merge 할 때까지 시간이 걸린다면 필요한 commit만 골라서 가져올 때 사용한다.")])]),s._v(" "),r("li",[r("p",[s._v("버그를 수정할 때")]),s._v(" "),r("p",[s._v("새로운 기능을 개발하는 동안 개발해두었던 기존 기능에서 버그가 발견되었을 때, 해당 버그를 패치하기 위해 명시적 커밋을 만들고 해당 커밋만 골라서 branch에 배포한다.\n이로써 버그를 빠르게 패치하여 배포 사이트에 바로 반영할 수 있다.")])]),s._v(" "),r("li",[r("p",[s._v("반영되지 않은 손실된 커밋 복원 (pull request)")]),s._v(" "),r("p",[s._v("실수로 pull request를 merge 하기 전에 닫아버렸을 때, cherry-pick을 사용해 해당 commit을 가져와 살릴 수 있다.")])])])]),s._v(" "),r("h2",{attrs:{id:"사용-방법"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#사용-방법"}},[s._v("#")]),s._v(" 사용 방법")]),s._v(" "),r("ol",[r("li",[s._v("커밋 hash 확인하기")])]),s._v(" "),r("p",[s._v("우선, 현재 가져올 커밋의 hash를 확인해야한다.\n복사할 커밋이 있는 branch에서 아래의 명령어를 실행한다.")]),s._v(" "),r("div",{staticClass:"language-bash line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[s._v("$ "),r("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" log "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--oneline")]),s._v("\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br")])]),r("p",[r("img",{attrs:{src:"https://user-images.githubusercontent.com/51310674/269364422-c174e99c-226f-4953-ab04-750a847a3d36.png",alt:"log"}})]),s._v(" "),r("p",[r("code",[s._v("git log")]),s._v(" 명령어를 통해 커밋을 확인하고, 좌측에 있는 커밋 hash(6자리)를 확인한다.\n만약 두 번째에 위치한 'blog 플러그인 디렉토리 설정 변경' 커밋을 가져오고 싶다면 커밋 hash는 "),r("code",[s._v("32cd990")]),s._v("이다.")]),s._v(" "),r("ol",{attrs:{start:"2"}},[r("li",[s._v("붙여넣기할 branch로 이동 후 cherry-pick 진행")])]),s._v(" "),r("div",{staticClass:"language-bash line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# branch 이동")]),s._v("\n$ "),r("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" switch "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit을 붙여넣을 branch"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cherry-pick 사용")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ex) git cherry-pick 32cd990")]),s._v("\n$ "),r("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cherry-pick "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("commit hash"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br")])]),r("p",[s._v("여러개의 commit을 가져오고 싶다면 아래와 같이 진행하면 된다.")]),s._v(" "),r("div",{staticClass:"language-bash line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 나눠서 진행")]),s._v("\n$ "),r("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cherry-pick d86551f\n$ "),r("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cherry-pick 32cd990\n\n\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 한번에 진행")]),s._v("\n$ "),r("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cherry-pick d86551f 32cd990\n\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br")])]),r("h2",{attrs:{id:"cherry-pick시-충돌이-날-경우"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cherry-pick시-충돌이-날-경우"}},[s._v("#")]),s._v(" cherry-pick시 충돌이 날 경우")]),s._v(" "),r("p",[s._v("cherry-pick하려는 commit과 내 branch 사이에 충돌이 발생할 경우 두 가지 옵션으로 해결할 수 있다.")]),s._v(" "),r("h3",{attrs:{id:"충돌-해결-후-cherry-pick-진행"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#충돌-해결-후-cherry-pick-진행"}},[s._v("#")]),s._v(" 충돌 해결 후, cherry-pick 진행")]),s._v(" "),r("ol",[r("li",[s._v("충돌이 발생한 코드를 수정한다.")]),s._v(" "),r("li",[r("code",[s._v("git add <충돌 파일 경로>")]),s._v("로 충돌을 해결한 코드 추가")]),s._v(" "),r("li",[r("code",[s._v("git cherry-pick --continue")]),s._v("로 cherry-pick을 계속 진행")])]),s._v(" "),r("h3",{attrs:{id:"cherry-pick-중단"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#cherry-pick-중단"}},[s._v("#")]),s._v(" cherry-pick 중단")]),s._v(" "),r("ol",[r("li",[r("code",[s._v("git cherry-pick -abort")]),s._v(" 명령어를 통해 cherry-pick이 중단되며, cherry-pick 이전의 상태로 돌아간다.")])]),s._v(" "),r("h2",{attrs:{id:"merge-commit에-대해-cherry-pick을-할-경우"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#merge-commit에-대해-cherry-pick을-할-경우"}},[s._v("#")]),s._v(" merge commit에 대해 cherry-pick을 할 경우")]),s._v(" "),r("div",{staticClass:"language-bash line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[s._v("$ "),r("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" cherry-pick "),r("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("merge commit hash"),r("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br")])])],1)}),[],!1,null,null,null);r.default=e.exports}}]);